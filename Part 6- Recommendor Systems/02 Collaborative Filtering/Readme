Collaborative Filtering algorithm considers “User Behaviour” for recommending items. 
They exploit behaviour of other users and items in terms of transaction history, ratings, selection and purchase information. 
Other users behaviour and preferences over the items are used to recommend items to the new users. 
In this case, features of the items are not known.

Stpes:
1. create a matrix of user features for each user (U)
2. Create another matrix of item ratings by each user
3. From the matrix, by formaing quations for each user rating(ie. Transpose(U)*Item Feature matrix), we'll get eqns (No.of.eqn= no.of users who rated the product)
4. Solve these eqns for getting the feature matrix of the item. Repeat for all items
5. Recommender items for each user formula: MAX(U1TS1, U1TS2, U1TS3, U1TS4, U1TS5)

Thoery: https://www.analyticsvidhya.com/blog/2015/10/recommendation-engines/

Types:
1. User-User Collaborative filtering: Here we find look alike customers (based on similarity) and offer products which first customer’s look alike has chosen in past. This algorithm is very effective but takes a lot of time and resources. It requires to compute every customer pair information which takes time. Therefore, for big base platforms, this algorithm is hard to implement without a very strong parallelizable system.
2. Item-Item Collaborative filtering: It is quite similar to previous algorithm, but instead of finding customer look alike, we try finding item look alike. Once we have item look alike matrix, we can easily recommend alike items to customer who have purchased any item from the store. This algorithm is far less resource consuming than user-user collaborative filtering. Hence, for a new customer the algorithm takes far lesser time than user-user collaborate as we don’t need all similarity scores between customers. And with fixed number of products, product-product look alike matrix is fixed over time.
3. Other simpler algorithms: There are other approaches like market basket analysis, which generally do not have high predictive power than the algorithms described above.





